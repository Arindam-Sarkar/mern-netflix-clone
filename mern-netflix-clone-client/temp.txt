import React, { useState, useEffect } from 'react'
import { IoPlayCircleSharp } from "react-icons/io5";
import { AiOutlinePlus, AiTwotoneHeart } from "react-icons/ai";
import { RiThumbUpFill, RiThumbDownFill } from "react-icons/ri";
import { BiChevronDown } from "react-icons/bi";
import { BsCheck } from "react-icons/bs";
import './searchResRow.css'


const SearchResRow = ({ resultArr, rowNos }) => {
  const [iconFocussed, setIconFocussed] = useState([false, false, false, false, false])
  const [rowData, SetRowData] = useState({ loaded: false, data: [] })

  useEffect(() => {
    if (resultArr.complete === true) {
      const initialVal = rowNos * 5;
      let arrTmp = []
      for (let i = initialVal; i < (initialVal + 5); i++) {
        arrTmp.push(resultArr.result[i])
      }
      SetRowData({ loaded: true, data: arrTmp })
    }
  }, [resultArr])

  const iconFocussedHandler = (setLocation, setState) => {
    const iconFocussedTemp = [...iconFocussed]

    iconFocussedTemp[setLocation] = setState
    setIconFocussed(iconFocussedTemp)
  }

  console.log(rowData);
  return (
    <div className='srrMainCont'>
      <div>
        {
          (rowData.loaded === true) &&
          <div className='srrCont'>
            {
              rowData.data?.map(data => {
                return (

                  <div className='srrRowItemCont' key={data.id}>
                    <img className='srrImage'
                      src={`https://image.tmdb.org/t/p/w500/${data.backdrop_path}`}
                      alt="No Image" />

                    <div className='srrIconsMainCont'>
                      <div className='srrIconsCont'>
                        <IoPlayCircleSharp
                          onMouseEnter={() => iconFocussedHandler(0, true)}
                          onMouseLeave={() => iconFocussedHandler(0, false)}
                          className={iconFocussed[0] ?
                            ('srrIcons srrIconsSelected') : ('srrIcons')}
                        />

                        <RiThumbUpFill
                          onMouseEnter={() => iconFocussedHandler(1, true)}
                          onMouseLeave={() => iconFocussedHandler(1, false)}
                          className={iconFocussed[1] ?
                            ('srrIcons srrIconsSelected') : ('srrIcons')}
                        />

                        <RiThumbDownFill
                          onMouseEnter={() => iconFocussedHandler(2, true)}
                          onMouseLeave={() => iconFocussedHandler(2, false)}
                          className={iconFocussed[2] ?
                            ('srrIcons srrIconsSelected') : ('srrIcons')}
                        />

                        <AiTwotoneHeart
                          onMouseEnter={() => iconFocussedHandler(3, true)}
                          onMouseLeave={() => iconFocussedHandler(3, false)}
                          className={iconFocussed[3] ?
                            ('srrIcons srrIconsSelected') : ('srrIcons')}
                        />
                      </div>
                    </div>
                    <div className='srrRowItemtext'>
                      {data.title}
                    </div>

                  </div>
                )
              })
            }
          </div>
        }
      </div>
    </div>
  )
}

export default SearchResRow